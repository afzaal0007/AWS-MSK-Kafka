
# AS this script will be run on EC2. make sure we have an AWS role with (Attached Permission Policy) to allow EC2 instance access to AWS Secrets Manager
# {
#     "Version": "2012-10-17",
#     "Statement": [
#         {
#             "Effect": "Allow",
#             "Action": [
#                 "secretsmanager:GetSecretValue",
#                 "kms:Decrypt"
#             ],
#             "Resource": [
#                 "arn:aws:secretsmanager:YOUR-AWS-REGION:YOUR-AWS-ACCOUNT-ID:secret:YOUR-SECRET-NAME",
#                 "arn:aws:kms:YOUR-AWS-REGION:YOUR-AWS-ACCOUNT-ID:key/YOUR-KMS-KEY-ID"
#             ]
#         }
#     ]
# }


# Instructions for IAM Policy:
#     In the  IAM policy Replace  with placeholders for YOUR-AWS-REGION, YOUR-AWS-ACCOUNT-ID, YOUR-SECRET-NAME, and YOUR-KMS-KEY-ID, which you'll need to replace with the appropriate values for your environment.

# AWS Secrets Manager Instructions:
    
# Additionally, make sure to update the corresponding keys in your Secrets Manager secret to match the new variable names (e.g., mysql-db-name, mysql-db-user, mysql-db-password, mysql-db-server for MySQL, and postgres-db-name, postgres-db-user, postgres-db-password, postgres-db-server for PostgreSQL).


